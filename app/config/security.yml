# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
        # Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: sha512

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_MANAGER:     ROLE_USER
        ROLE_ADMIN:       ROLE_MANAGER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        main:
            pattern: ^/
            form_login:
                provider: fos_userbundle
                csrf_provider: security.csrf.token_manager
            logout:       true
            anonymous:    true
        
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # the login page has to be accessible for everybody
        demo_login:
            pattern:  ^/demo/secured/login$
            security: false


    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/cookbook/security/access_control.html
    access_control:
        
        - { path: ^/project/.+/task/edit/, role: ROLE_MANAGER }
        - { path: ^/project/.+/task/.+/new, role: ROLE_MANAGER }
        - { path: ^/project/.+/task/new, role: ROLE_MANAGER }
        - { path: ^/project/task/ajaxchangestate, role: ROLE_USER }
        - { path: ^/user, role: ROLE_MANAGER }
        - { path: ^/project/new, role: ROLE_MANAGER }
        - { path: ^/project/archive, role: ROLE_MANAGER }
        - { path: ^/project/.+/invite, role: ROLE_MANAGER }
        - { path: ^/project/.+/edit, role: ROLE_MANAGER }
        - { path: ^/projects/archived, role: ROLE_MANAGER }
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: ROLE_ADMIN }
        - { path: ^/*, role: ROLE_USER }